version: "3"

services:
  envoy:
    image: envoyproxy/envoy:dev-3f198ba35873bba736374ea568fcfa6c4d903215
    ports:
      - "80:80"
      - "443:443"
      - "9901:9901"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ./envoy/sert.crt:/etc/ssl/certs/sert.crt
      - ./envoy/key.key:/etc/ssl/certs/key.key
    restart: unless-stopped

  main_api_1:
    build:
      context: .
      dockerfile: dockerfile
    expose:
      - 1000
    environment:
      - PORT=1000
      - REDISLINK=redis://redis:6379
      - STORAGEADDR=minio
      - STORAGEPORT=9000
    depends_on: [redis]
    restart: unless-stopped

  main_api_2:
    build:
      context: .
      dockerfile: dockerfile
    expose:
      - 1000
    environment:
      - PORT=1000
      - REDISLINK=redis://redis:6379
      - STORAGEADDR=minio
      - STORAGEPORT=9000
    depends_on: [redis]
    restart: unless-stopped

  redis:
    image: "redis:alpine"
    command: redis-server --save "" --loglevel warning
    expose:
      - 6379
    volumes:
      - redis_data:/data
    restart: unless-stopped

  minio:
    image: minio/minio
    command: server /data
    expose:
      - 9000
      - 9001
    environment:
      MINIO_ROOT_USER: ${STORAGEACC}
      MINIO_ROOT_PASSWORD: ${STORAGEPWD}
      MINIO_CONSOLE_ADDRESS: ":9001"
      MINIO_SERVER_URL: http://${STORAGEDOMAIN}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - storage_data:/data
    extra_hosts:
      # for local testing only, to avoid shadowing by container 'localhost' while console tries to lookup storage.localhost
      - "storage.localhost:host-gateway"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    expose:
      - 9090
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    expose:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=adminpwd
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  storage_data:
  redis_data:
  prometheus_data:
  grafana_data:
