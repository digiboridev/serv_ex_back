admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: https
      address:
        socket_address: { address: 0.0.0.0, port_value: 443 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                upgrade_configs:
                  - upgrade_type: websocket
                codec_type: AUTO
                route_config:
                  name: main
                  virtual_hosts:
                    - name: forward_to_http
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: http_upstream }
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: "/etc/ssl/certs/sert.crt"
                    private_key:
                      filename: "/etc/ssl/certs/key.key"
                alpn_protocols: "h2,http/1.1"
    - name: http
      address:
        socket_address: { address: 0.0.0.0, port_value: 80 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                upgrade_configs:
                  - upgrade_type: websocket
                codec_type: AUTO
                route_config:
                  name: main
                  virtual_hosts:
                    - name: grafana
                      domains: ["grafana.*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: grafana }
                    - name: storage
                      domains: ["storage.*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: storage }
                    - name: storage_console
                      domains: ["console.storage.*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: storage_console }
                    - name: api
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: main_api }
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: http_upstream
      type: STATIC
      load_assignment:
        cluster_name: http_upstream
        endpoints: [lb_endpoints: [endpoint: { address: { socket_address: { address: 0.0.0.0, port_value: 80 } } }]]
    - name: main_api
      type: STRICT_DNS
      load_assignment:
        cluster_name: main_api
        endpoints: [lb_endpoints: [endpoint: { address: { socket_address: { address: main_api, port_value: 1000 } } }]]
    - name: storage
      type: STRICT_DNS
      load_assignment:
        cluster_name: storage
        endpoints: [lb_endpoints: [endpoint: { address: { socket_address: { address: minio, port_value: 9000 } } }]]
    - name: storage_console
      type: STRICT_DNS
      load_assignment:
        cluster_name: storage_console
        endpoints: [lb_endpoints: [endpoint: { address: { socket_address: { address: minio, port_value: 9001 } } }]]
    - name: grafana
      type: STRICT_DNS
      load_assignment:
        cluster_name: grafana
        endpoints: [lb_endpoints: [endpoint: { address: { socket_address: { address: grafana, port_value: 3000 } } }]]
